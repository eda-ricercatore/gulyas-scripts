#!/opt/local/bin/octave

%	This is written by Zhiyang Ong to test my knowledge of resetting
%		pseudo-random number generation (PRNG) in GNU Octave.
%
%	PRNG is also the acronym for pseudo-random number generators.
%
%	The procedure for resetting PRNG is:
%		# Reset the seed of the PRNG.
%		# vector vec1 = sequence of numbers generated by PRNG.
%		# 
%		# Reset the seed of the PRNG.
%		# vector vec2 = sequence of numbers generated by PRNG.
%		# 
%		# Check if vec1 == vec2? 
%		# 	Yes. Resetting PRNG is successful.
%		# Else, resetting PRNG is NOT successful.
%		# Raise an error, or throw an exception to report the error.
%		# 
%		# Repeat. Use a FOR loop to populate the vectors.
%		# 
%
%
%
%
%
%
%	The MIT License (MIT)
%
%	Copyright (c) <2016> Zhiyang Ong
%
%	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
%
%	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
%
%	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
%
%	Email address: echo "cukj -wb- 23wU4X5M589 TROJANS cqkH wiuz2y 0f Mw Stanford" | awk '{ sub("23wU4X5M589","F.d_c_b. ") sub("Stanford","d0mA1n"); print $5, $2, $8; for (i=1; i<=1; i++) print "6\b"; print $9, $7, $6 }' | sed y/kqcbuHwM62z/gnotrzadqmC/ | tr 'q' ' ' | tr -d [:cntrl:] | tr -d 'ir' | tr y "\n"		Don't compromise my computing accounts. You have been warned.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%	Preamble.
%addpath("/Users/zhiyang/Documents/ricerca/gulyas-scripts/dummy")

disp("------------------------------------------------------------")

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


format('long')
%	Initialize/Reset the seed for PRNG.
rand("seed","reset")

%	Length of (n-) bit vector; size of n.
%n = 64;
n = 8;

%	Use the PRNG to generate a vector of random numbers between
%		0 and 1.
vec1a = rand(1, n, [0 1])
vec1 = rand(0, 1, 1, n)
vec2 = rand(1, n)

%	Terminal output for vec1a and vec1.
%	vec1a = [](1x8x0)
%	vec1 = [](0x1x1x8)





%	Get the properties of vec1a
len_vec1a = length(vec1a)
size_vec1a = size(vec1a)


%	Get the properties of vec1
len_vec1 = length(vec1)
size_vec1 = size(vec1)

%	Get the properties of vec2
len_vec2 = length(vec2)
size_vec2 = size(vec2)















